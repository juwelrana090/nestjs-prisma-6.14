// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  displayName String? // Optional field
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  userSetting UserSetting?
  posts       Post[]
  groupPosts  UserOnGroupPosts[]
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
}

model GroupPost {
  id          Int                @id @default(autoincrement())
  title       String
  description String
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  users       UserOnGroupPosts[]
}

model UserOnGroupPosts {
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  groupPost   GroupPost @relation(fields: [groupPostId], references: [id])
  groupPostId Int

  @@id([userId, groupPostId])
}

model UserSetting {
  id              Int     @id @default(autoincrement())
  notificationsOn Boolean
  smsEnabled      Boolean
  user            User    @relation(fields: [userId], references: [id])
  userId          Int     @unique
}
